graalvm = marketing / twitter


graal est embarqué dans openJDK 11 mais pas dans 17 -> utilisation de GraalVM
-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
-XX:-EnableJVMCI

level :
0 = interpret
1/2/3 = C1
4 = C2 or Graal

graal remplace C2

graal is wirtten in java / C2 is in c++
graal uses Java Heap / C2 use malloc
graal compile itsel using JIT / C2 is static

memory allocation

initTimer = see what is load

bootstrap = run all java.* package to make it hot
-XX:+BootstrapJVMCI -XX:-UseJVMCINativeLibrary

https://youtu.be/Rvb-kvuPzqI

https://www.baeldung.com/jvm-tiered-compilation

graph benchmark :

blender = native=GraalVM>OpenJDK

blender2 = native>GraalVM=OpenJDK=0

blender3 = native=GraalVM>OpenJDK

blender4 = native>OpenJDK>>GraalVM

blender5 = native>OpenJDK=GraalVM

blender6 = OpenJDK>native=GraalVM

blender7 = native>OpenJDK>>GraalVM

fibo = native=GraalVM>OpenJDK

fibo2 = native>OpenJDK>GraalVM

blender = blender3 -> non optimisé au build time

blender2 = optimisation trouvée au runtime

blender6 = blender but more efficient for native

blender7 = blender4